// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RouletteScreen renders correctly 1`] = `
<View
  style={
    [
      {
        "display": "flex",
      },
      {
        "flexDirection": "column",
      },
      {
        "height": "100%",
      },
      {
        "width": "100%",
      },
      {
        "justifyContent": "center",
      },
      {
        "alignItems": "center",
      },
    ]
  }
>
  <View
    style={
      [
        {
          "marginBottom": 40,
          "marginLeft": 40,
          "marginRight": 40,
          "marginTop": 40,
        },
        {
          "paddingBottom": 40,
          "paddingTop": 40,
        },
      ]
    }
  >
    <Text
      style={
        [
          {
            "fontWeight": "900",
          },
          {
            "fontSize": 48,
            "lineHeight": 48,
          },
          {
            "textAlign": "center",
          },
          {
            "color": "#111827",
          },
        ]
      }
    >
      PLACE A BET!
    </Text>
  </View>
  <View
    style={
      [
        {
          "display": "flex",
        },
        {
          "justifyContent": "center",
        },
        {
          "alignContent": "center",
        },
        {
          "paddingBottom": 40,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "display": "flex",
          },
          {
            "flexDirection": "row",
          },
          {
            "marginLeft": 20,
            "marginRight": 20,
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#4b5563",
            "borderBottomLeftRadius": 8,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 0,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "33.333333%",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 18,
                "lineHeight": 28,
              },
              {
                "color": "#fff",
              },
              {
                "textAlign": "center",
              },
            ]
          }
        >
          $1
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#4b5563",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 0,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "33.333333%",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 18,
                "lineHeight": 28,
              },
              {
                "color": "#fff",
              },
              {
                "textAlign": "center",
              },
            ]
          }
        >
          $10
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#4b5563",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 8,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 8,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "33.333333%",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 18,
                "lineHeight": 28,
              },
              {
                "color": "#fff",
              },
              {
                "textAlign": "center",
              },
            ]
          }
        >
          $100
        </Text>
      </View>
    </View>
    <View
      style={
        [
          {
            "display": "flex",
          },
          {
            "flexDirection": "row",
          },
          {
            "marginTop": 24,
          },
          {
            "marginLeft": 20,
            "marginRight": 20,
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderBottomLeftRadius": 8,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 0,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "50%",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 18,
                "lineHeight": 28,
              },
              {
                "color": "#fff",
              },
              {
                "textAlign": "center",
              },
              {
                "color": "#111827",
              },
            ]
          }
        >
          1 - 18
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 8,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 8,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "50%",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 18,
                "lineHeight": 28,
              },
              {
                "color": "#fff",
              },
              {
                "textAlign": "center",
              },
              {
                "color": "#111827",
              },
            ]
          }
        >
          19 - 36
        </Text>
      </View>
    </View>
    <View
      style={
        [
          {
            "display": "flex",
          },
          {
            "flexDirection": "row",
          },
          {
            "marginTop": 24,
          },
          {
            "marginLeft": 20,
            "marginRight": 20,
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderBottomLeftRadius": 8,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 0,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "50%",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 18,
                "lineHeight": 28,
              },
              {
                "color": "#fff",
              },
              {
                "textAlign": "center",
              },
              {
                "color": "#111827",
              },
            ]
          }
        >
          Even
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 8,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 8,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "50%",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 18,
                "lineHeight": 28,
              },
              {
                "color": "#fff",
              },
              {
                "textAlign": "center",
              },
              {
                "color": "#111827",
              },
            ]
          }
        >
          Odd
        </Text>
      </View>
    </View>
    <View
      style={
        [
          {
            "display": "flex",
          },
          {
            "flexDirection": "row",
          },
          {
            "marginTop": 24,
          },
          {
            "marginLeft": 20,
            "marginRight": 20,
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderBottomLeftRadius": 8,
            "borderBottomRightRadius": 0,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 0,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "50%",
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="40"
          bbWidth="40"
          color="#1F2937"
          fill="#1F2937"
          focusable={false}
          height={40}
          meetOrSlice={0}
          minX={0}
          minY={0}
          size={40}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              [
                undefined,
                undefined,
                {},
              ],
              {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          tintColor="#1F2937"
          vbHeight={256}
          vbWidth={256}
          width={40}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4280232247,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGRect
              fill={null}
              height="256"
              propList={
                [
                  "fill",
                ]
              }
              width="256"
              x="0"
              y="0"
            />
            <RNSVGPath
              d="M236,139.3,139.3,236a15.9,15.9,0,0,1-22.6,0L20,139.3a16.1,16.1,0,0,1,0-22.6L116.7,20a16.1,16.1,0,0,1,22.6,0L236,116.7A16.1,16.1,0,0,1,236,139.3Z"
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 8,
            "borderBottomWidth": 2,
            "borderLeftWidth": 2,
            "borderRightWidth": 2,
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 8,
            "borderTopWidth": 2,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "50%",
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="40"
          bbWidth="40"
          color="#F43F3F"
          fill="#F43F3F"
          focusable={false}
          height={40}
          meetOrSlice={0}
          minX={0}
          minY={0}
          size={40}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              [
                undefined,
                undefined,
                {},
              ],
              {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          tintColor="#F43F3F"
          vbHeight={256}
          vbWidth={256}
          width={40}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4294197055,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGRect
              fill={null}
              height="256"
              propList={
                [
                  "fill",
                ]
              }
              width="256"
              x="0"
              y="0"
            />
            <RNSVGPath
              d="M236,139.3,139.3,236a15.9,15.9,0,0,1-22.6,0L20,139.3a16.1,16.1,0,0,1,0-22.6L116.7,20a16.1,16.1,0,0,1,22.6,0L236,116.7A16.1,16.1,0,0,1,236,139.3Z"
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      style={
        [
          {
            "display": "flex",
          },
          {
            "flexDirection": "row",
          },
          {
            "marginTop": 24,
          },
          {
            "marginLeft": 20,
            "marginRight": 20,
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#3b82f6",
            "borderBottomLeftRadius": 8,
            "borderBottomRightRadius": 8,
            "borderBottomWidth": 0,
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 8,
            "borderTopWidth": 0,
            "display": "flex",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontWeight": "700",
              },
              {
                "fontSize": 18,
                "lineHeight": 28,
              },
              {
                "color": "#fff",
              },
              {
                "textAlign": "center",
              },
            ]
          }
        >
          SPIN
        </Text>
      </View>
    </View>
    <Text
      style={
        [
          {
            "color": "#000",
          },
          {
            "textAlign": "center",
          },
          {
            "fontSize": 30,
            "lineHeight": 36,
          },
          {
            "fontWeight": "700",
          },
          {
            "paddingTop": 40,
          },
        ]
      }
    >
      Bet: $
      0
    </Text>
  </View>
</View>
`;
